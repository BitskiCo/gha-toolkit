name: Rust

on:
  pull_request:
    paths:
      - "**.rs"
      - "**.sql"
      - "**.toml"
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    container: ghcr.io/bitskico/rust-sdk
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure Cache
        uses: BitskiCo/cargo-cache-action@v1

      - name: Expose GitHub Actions vars
        uses: actions/github-script@v6
        with:
          script: |
            Object.keys(process.env)
              .filter(RegExp.prototype.test.bind(/^ACTIONS_/))
              .forEach((name) => {
                const value = process.env[name];
                if (!value) return;
                core.info(`${name}=${value}`);
                core.exportVariable(name, value);
            });

      - name: Sync Rustup with rust-toolchain.toml
        run: rustup show

      - name: Run cargo test
        run: cargo test

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ github.token }}
          args: -- --deny warnings

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
